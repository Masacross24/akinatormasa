{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5001',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// „Ç≤„Éº„É†„ÅÆÂàùÊúüÂåñ\nexport const initializeGame = async () => {\n  try {\n    const response = await api.post('/initialize');\n    return response.data.message;\n  } catch (error) {\n    console.error('Error initializing game:', error);\n    throw error;\n  }\n};\n\n// „ÉÅ„É£„ÉÉ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÈÄÅ‰ø°\nexport const chatWithGPT = async message => {\n  try {\n    const response = await api.post('/chat', {\n      message\n    });\n    return response.data.response;\n  } catch (error) {\n    console.error('Error chatting with GPT:', error);\n    throw error;\n  }\n};\n\n// üî•„ÄêËøΩÂä†„Äë„Éí„É≥„ÉàÂèñÂæóÁî®„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà\nexport const getHint = async level => {\n  try {\n    const response = await api.post('/hint', {\n      level\n    });\n    console.log('Hint Response:', response.data); // ‚úÖ „Éá„Éê„ÉÉ„Ç∞Áî®„Å´„É¨„Çπ„Éù„É≥„Çπ„Çí„É≠„Ç∞Ë°®Á§∫\n    return response.data.hint; // ‚úÖ Ê≠£„Åó„ÅÑ„É¨„Çπ„Éù„É≥„Çπ„Éá„Éº„Çø„ÅÆÂèñÂæó\n  } catch (error) {\n    console.error('Error fetching hint:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","initializeGame","response","post","data","message","error","console","chatWithGPT","getHint","level","log","hint"],"sources":["/Users/masachikatsuji/seisho_akinator_2/akinator/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// „Ç≤„Éº„É†„ÅÆÂàùÊúüÂåñ\nexport const initializeGame = async () => {\n  try {\n    const response = await api.post('/initialize');\n    return response.data.message;\n  } catch (error) {\n    console.error('Error initializing game:', error);\n    throw error;\n  }\n};\n\n// „ÉÅ„É£„ÉÉ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÈÄÅ‰ø°\nexport const chatWithGPT = async (message) => {\n  try {\n    const response = await api.post('/chat', { message });\n    return response.data.response;\n  } catch (error) {\n    console.error('Error chatting with GPT:', error);\n    throw error;\n  }\n};\n\n// üî•„ÄêËøΩÂä†„Äë„Éí„É≥„ÉàÂèñÂæóÁî®„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà\nexport const getHint = async (level) => {\n  try {\n    const response = await api.post('/hint', { level });\n    console.log('Hint Response:', response.data);  // ‚úÖ „Éá„Éê„ÉÉ„Ç∞Áî®„Å´„É¨„Çπ„Éù„É≥„Çπ„Çí„É≠„Ç∞Ë°®Á§∫\n    return response.data.hint;  // ‚úÖ Ê≠£„Åó„ÅÑ„É¨„Çπ„Éù„É≥„Çπ„Éá„Éº„Çø„ÅÆÂèñÂæó\n  } catch (error) {\n    console.error('Error fetching hint:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,aAAa,CAAC;IAC9C,OAAOD,QAAQ,CAACE,IAAI,CAACC,OAAO;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAOH,OAAO,IAAK;EAC5C,IAAI;IACF,MAAMH,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,OAAO,EAAE;MAAEE;IAAQ,CAAC,CAAC;IACrD,OAAOH,QAAQ,CAACE,IAAI,CAACF,QAAQ;EAC/B,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAG,MAAOC,KAAK,IAAK;EACtC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,OAAO,EAAE;MAAEO;IAAM,CAAC,CAAC;IACnDH,OAAO,CAACI,GAAG,CAAC,gBAAgB,EAAET,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;IAC/C,OAAOF,QAAQ,CAACE,IAAI,CAACQ,IAAI,CAAC,CAAE;EAC9B,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}